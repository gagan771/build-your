import { useState } from "react";
import { SignedIn, SignedOut } from "@clerk/nextjs";

export default function Home() {
  const [prompt, setPrompt] = useState("");
  const [isGenerating, setIsGenerating] = useState(false);
  const [generatedCode, setGeneratedCode] = useState("");

  const handleGenerate = async () => {
    if (!prompt.trim()) return;
    
    setIsGenerating(true);
    try {
      // TODO: Implement API call to Gemini
      // For now, just simulate generation
      setTimeout(() => {
        setGeneratedCode(`
<!DOCTYPE html>
<html>
<head>
    <title>Generated Website</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 0; padding: 20px; }
        .container { max-width: 800px; margin: 0 auto; }
        h1 { color: #333; }
        p { line-height: 1.6; }
    </style>
</head>
<body>
    <div class="container">
        <h1>Generated Website</h1>
        <p>This is a sample website generated from your prompt: "${prompt}"</p>
        <p>In the real implementation, this would be generated by the AI based on your description.</p>
    </div>
</body>
</html>
        `);
        setIsGenerating(false);
      }, 2000);
    } catch (error) {
      console.error("Generation failed:", error);
      setIsGenerating(false);
    }
  };

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="max-w-6xl mx-auto p-6">
        <SignedOut>
          <div className="text-center py-20">
            <h1 className="text-4xl font-bold text-gray-900 mb-4">
              Website Generator
            </h1>
            <p className="text-xl text-gray-600 mb-8">
              Sign in to start generating websites with AI
            </p>
          </div>
        </SignedOut>

        <SignedIn>
          <div className="space-y-6">
            <div className="bg-white rounded-lg shadow-sm p-6">
              <h2 className="text-2xl font-bold text-gray-900 mb-4">
                Generate Your Website
              </h2>
              <div className="space-y-4">
                <div>
                  <label htmlFor="prompt" className="block text-sm font-medium text-gray-700 mb-2">
                    Describe your website
                  </label>
                  <textarea
                    id="prompt"
                    value={prompt}
                    onChange={(e) => setPrompt(e.target.value)}
                    placeholder="Describe the website you want to create... (e.g., 'A modern portfolio website for a photographer with a dark theme and image gallery')"
                    className="w-full h-32 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                  />
                </div>
                <button
                  onClick={handleGenerate}
                  disabled={isGenerating || !prompt.trim()}
                  className="px-6 py-3 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed"
                >
                  {isGenerating ? "Generating..." : "Generate Website"}
                </button>
              </div>
            </div>

            {generatedCode && (
              <div className="bg-white rounded-lg shadow-sm p-6">
                <h3 className="text-xl font-bold text-gray-900 mb-4">
                  Generated Website
                </h3>
                <div className="space-y-4">
                  <div className="border rounded-md p-4 bg-gray-50">
                    <h4 className="text-sm font-medium text-gray-700 mb-2">HTML Code:</h4>
                    <pre className="text-sm text-gray-800 overflow-x-auto">
                      <code>{generatedCode}</code>
                    </pre>
                  </div>
                  <div className="border rounded-md p-4">
                    <h4 className="text-sm font-medium text-gray-700 mb-2">Live Preview:</h4>
                    <div className="border rounded-md h-96 overflow-auto">
                      <iframe
                        srcDoc={generatedCode}
                        className="w-full h-full border-0"
                        title="Generated Website Preview"
                      />
                    </div>
                  </div>
                  <button className="px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700">
                    Download ZIP
                  </button>
                </div>
              </div>
            )}
          </div>
        </SignedIn>
      </div>
    </div>
  );
}
